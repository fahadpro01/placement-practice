#include<bits/stdc++.h>
using namespace std;
int n,m;
int arr[1001][1001];
bool visited[1001][1001];


bool check(int x, int y){
    if(x<1 || y<1|| x>n || y>m)
    return false;
    if(visited[x][y]==1 || arr[x][y]==0)
    return false;
    return true;
}

int dfs(int x,int y,int area){
     int ans=0;
    
    if(arr[x][y]==1 && visited[x][y]==0)
    ans++;
    visited[x][y]=1;
    
   
    if(check(x-1,y))
    {
       ans+= dfs(x-1,y,0);
    }
    if(check(x+1,y))
    {
        ans+=  dfs(x+1,y,0);
    }
    if(check(x,y-1))
    {
        ans+=  dfs(x,y-1,0);
    }
    if(check(x,y+1))
    {
        ans+=  dfs(x,y+1,0);
    }
    if(check(x-1,y-1))
    {
       ans+=   dfs(x-1,y-1,0);
    }
    if(check(x-1,y+1))
    {
        ans+=  dfs(x-1,y+1,0);
    }
    if(check(x+1,y+1))
    {
        ans+=  dfs(x+1,y+1,0);
    }
    if(check(x+1,y-1))
    {
       ans+=   dfs(x+1,y-1,0);
    }
    return ans;
}

int main()
{    int count=0;
int ans=0;
cin>>n>>m;
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<m+1;j++)
          cin>>arr[i][j]; 
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(visited[i][j]==0 && arr[i][j]==1)
        {
          int temp = dfs(i,j,0); 
          count++;
          ans=max(ans,temp);
        }
        }
    }
    cout<<ans<<endl;
    return 0;
}
