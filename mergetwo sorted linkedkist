class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
       /* ListNode* p1=list1;
        ListNode* p2=list2;
        ListNode* dummyNode=new ListNode(-1);
        ListNode* p3=dummyNode;
        
        while(p1 !=NULL && p2 !=NULL){
             if(p1->val < p2->val){
                 p3->next=p1;
                 p1=p1->next;
             }
                 else
                 {
                   p3->next=p2;
                     p2=p2->next;
                  }
                 p3=p3->next;
                       
             }
            while(p1 !=NULL){
            p3->next=p1;
                p1=p1->next;
                    p3=p3->next;
            }
            while(p2 !=NULL){
            p3->next=p2;
                p2=p2->next;
                p3=p3->next;
                
            }
        return dummyNode->next;
    }
    */
        
        
        if(list1 == NULL){
            return list2;
        }
        if(list2 == NULL){
            return list1;
        }
        ListNode* res;
        if(list1->val < list2->val){
            res=list1;
            res->next=mergeTwoLists(list1->next,list2);
        }
        else{
            res=list2;
            res->next=mergeTwoLists(list1,list2->next);
        }
        return res;
    }
    
        
 

};
